apiVersion: v1
data:
  config.toml: |
    concurrent = 20
    check_interval = 30
    log_level = "debug"
    listen_address = '[::]:9252'
  configure: |
    set -e
    cp /init-secrets/* /secrets
  entrypoint: |
    #!/bin/bash
    set -e
    mkdir -p /home/gitlab-runner/.gitlab-runner/
    cp /scripts/config.toml /home/gitlab-runner/.gitlab-runner/

    # Register the runner
    if [[ -f /secrets/s3-access-key && -f /secrets/s3-secret-key ]]; then
      export S3_ACCESS_KEY=$(cat /secrets/s3-access-key)
      export S3_SECRET_KEY=$(cat /secrets/s3-secret-key)
    fi

    if [[ -f /secrets/runner-registration-token ]]; then
      export REGISTRATION_TOKEN=$(cat /secrets/runner-registration-token)
    fi

    if [[ -f /secrets/runner-token ]]; then
      export CI_SERVER_TOKEN=$(cat /secrets/runner-token)
    fi

    /entrypoint register --non-interactive \
      --kubernetes-image-pull-secrets "registry-ci-key" \
      --tls-ca-file=/home/gitlab-runner/git.example.com.crt \

    cat >>/home/gitlab-runner/.gitlab-runner/config.toml <<EOF
            [[runners.kubernetes.volumes.host_path]]
              name = "docker"
              mount_path = "/var/run/docker.sock"
              read_only = false
              host_path = "/var/run/docker.sock"
    EOF

    cat >>/home/gitlab-runner/.gitlab-runner/config.toml <<EOF
            [[runners.kubernetes.volumes.pvc]]
              name = "backend-cache-pvc"
              mount_path = "/builds/cache"
    EOF
    #cat >>/home/gitlab-runner/.gitlab-runner/config.toml <<EOF
    #        [[runners.kubernetes.volumes.pvc]]
    #          name = "gitlab-runner-cache-modules-go-nfs-pvc"
    #          mount_path = "/go"
    #EOF


    # Start the runner
    /entrypoint run --user=gitlab-runner \
      --working-directory=/home/gitlab-runner
kind: ConfigMap
metadata:
  labels:
    app: k8s-gitlab-runner
  name: k8s-gitlab-runner
  namespace: kube-cicd
